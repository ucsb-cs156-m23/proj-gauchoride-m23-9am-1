# Running this script will run a full mutation coverage report
# on the appropriate branch, and then save the result for
# future incremental runs.

name: "34-frontend-mutation-testing: Stryker JS Mutation Testing (JavaScript/Jest)"

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: [frontend/**]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "America/Los_Angeles"
      - uses: actions/checkout@v3.5.2
        with: 
          fetch-depth: 2


      - run: npm ci
        working-directory: ./frontend


      - run: npx stryker run --incremental --incrementalFile reports/stryker-incremental-${{env.branch_name}}.json
        working-directory: ./frontend

      # We don't download a previous incrementatl file
      # but we do upload the current incremental file
      # so that the next run can use it.

      - name: Upload stryker incremental file to Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: stryker-incremental-${{env.branch_name}}.json
          path: frontend/reports/stryker-incremental-${{env.branch_name}}.json

      - run: npx stryker run
        working-directory: ./frontend
      - name: Upload stryker report to Artifacts
        if: always() # always upload artifacts, even if tests fail
        uses: actions/upload-artifact@v3.1.2
        with:
          name: stryker-report
          path: frontend/reports/mutation/*

      - name: Get PR number
        id: get-pr-num
        run: |
          echo "GITHUB_EVENT_PATH=${GITHUB_EVENT_PATH}"
          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "pr_number=${pr_number}" 
          echo "pr_number=${pr_number}" >> "$GITHUB_ENV"
          
      - name: Figure out Branch name
        id: get-branch-name
        run: | 
            GITHUB_HEAD_REF="${GITHUB_HEAD_REF}"
            echo GITHUB_HEAD_REF=${GITHUB_HEAD_REF}
            GITHUB_REF_CLEANED=${GITHUB_REF/refs\/heads\//}
            echo GITHUB_REF_CLEANED=${GITHUB_REF_CLEANED}
            GITHUB_REF_CLEANED=${GITHUB_REF_CLEANED//\//-}
            echo GITHUB_REF_CLEANED=${GITHUB_REF_CLEANED}
            BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_CLEANED}}"
            echo "branch_name=${BRANCH}"
            echo "branch_name=${BRANCH}" >> "$GITHUB_ENV"

      - name: Deploy ðŸš€
        if: always() # always upload artifacts, even if tests fail
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: frontend/report/mutation # The folder where the javadoc files are located
          clean: true # Automatically remove deleted files from the deploy branch
          target-folder: stryker # The folder that we serve our javadoc files from
